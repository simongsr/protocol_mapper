# il commento verr√† ignorato
# reserved 23;
# reserved 25, 27, 29;
# reserved [90 , 99];
# reserved [91, 93];

alias USER User

VARIABILE_GLOBALE_1 = 'global var'

__author__ = 'Simone Pandolfi <simopandolfi@gmail.com>'

# enum Enum_1 {  # altro commento
#     VAL1,
#     VAL2 = "Val_2",
#     prova,
#     VAL3 = 3.57
# }

# enum AddressType {
#     PHONE,
#     MOBILE,
#     EMAIL
# }

# model ModelloProva [abstract] [static = false] [final = true] [author = 'Simone Pandolfi <simopandolfi@gmail.com>'] {
#     enum NestedEnum { a, b, c }
#
#     model NestedModel {
#
#         model NestedModel {
#             optional int x = 11;
#         }
#
#         required string name  = 7;
#     }
#
#
#     required ModelloProva.NestedModel test = 8;
#     #optional Message_1 msg = 72;  # NOT PERMITTED - message reference into model declaration
# }

model Person [python_django__builtin = false] {

    enum Pets {
        DOG     = "dog",
        CAT     = "cat",
        HAMSTER = "ham"
    }

    model Person_Profile {
        optional string role = 21 [default = ''][max_length = 50];
    }

    model Friend {
        required string name  = 31 [max_length = 50];
        optional date   since = 32;
    }

    required string                name    = 1 [python_django__unique][max_length = 50];
    required int                   age     = 2;  # [half = 0.5];
    optional string                address = 3 [default = "nonloso"][max_length = 50];
    required Person.Person_Profile profile = 4;
    repeated string                words   = 5 [max_length = 50];
    repeated Person.Friend         friends = 6;
    # repeated Person.Pets           pets    = 7;
}

model User [python_django__builtin] {
    # used for mapping between custom objects and builtin objects
    required string first_name = 1001;
    required string last_name  = 1002;
    required string email      = 1003;
    required string username   = 1004;
}

model UserProfile {
    required USER user = 101;
    optional int  age  = 102 [null = false];
}


message User_Info_Message {
    required string name        = 1001;
    required string surname     = 1002;
    optional int    age         = 102;
    optional string description;
}

message Person_Message {

    message Aphorism {
        required string aphorism;
    }

    required string                 name     = 1;
    required int                    age      = 2;
    repeated string                 words    = 5;
    optional Person_Message.Aphorism aphorism;
    repeated Person_Message.Aphorism cits;
}

# message Message_1 {
#     required string name;
#     optional int  age       = 1;
#     optional Message_1.SubMessage messaggio;
#
#     message SubMessage {
#         optional string nullaDiChe;
#     }
# }

# 0.2e-3
# 0.1E5
# .7e+2
